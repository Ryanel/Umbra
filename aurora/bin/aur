#!/usr/bin/env python3
""" The package management frontend for Aurora """

import os
from clize import run
from clize import parameters
from aurora.commands.install import command_install
from aurora.operations.media import operation_media
from aurora.packagelist import PackageList
from aurora.config import Config

def main(command, *packages ,config_path='', live_sources='', rebuild=False, build_media=False, run=False):
    """Package manager for Umbra

    :param command: The command to run. One of: install, dev:watch
    :param packages: The packages to operate on.
    :param rebuild: Rebuild the package even if it is already installed.
    :param build_media: Builds live media.
    :param run: Run the live media after the command is complete.
    """
    # Create a universe
    if config_path == '' and 'AURORA_CONFIG' in os.environ:
        config_path = os.environ['AURORA_CONFIG']
    if config_path == '':
        config_path = '/etc/aurora/config.yaml'

    aurora_config = Config(config_path, live_sources)
    universe = aurora_config.load_universe()
    universe.load_world_set()

    failures = 0

    if command == 'install':
        command_install(universe, aurora_config, packages, rebuild)
    elif command == 'dev:watch':
        # command_watch(universe, aurora_config, packages, rebuild)
        pass
    else:
        print(f"Unknown command '{command}'")
        failures += 1

    if build_media and failures == 0:
        operation_media(universe, aurora_config)
if __name__ == '__main__':
    run(main)
